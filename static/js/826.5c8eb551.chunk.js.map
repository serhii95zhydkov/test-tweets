{"version":3,"file":"static/js/826.5c8eb551.chunk.js","mappings":"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","sources":["redux/users/usersSelectors.js","components/CardItem/CardItem.styled.jsx","components/CardItem/CardItem.jsx","components/CardList/CardList.styled.jsx","components/CardList/CardList.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["export const getAllUsers = ({ users }) => users.items;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 28px 0 36px;\n\n  border-radius: 20px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n`;\n\nexport const ImgLogo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const ImgBackground = styled.img`\n  margin: 0 auto;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 8px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 18px 0 62px 0;\n\n  background-color: #ebd8ff;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const ContainerAvatar = styled.div`\n  width: 80px;\n  height: 80px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n\n  border-radius: 50%;\n`;\n\nexport const ImgAvatar = styled.img`\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 26px;\n`;\n\nexport const Button = styled.button`\n  min-width: 196px;\n  height: 50px;\n  padding: 14px 39px;\n\n  font-weight: 600;\n  font-size: 18px;\n\n  border-radius: 10px;\n  border: none;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n\n  background-color: ${function (props) {\n    return props.value ? '#5cd3a8' : '#ebd8ff';\n  }};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.1);\n  }\n  color: #000000;\n`;\n","import { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/users/usersOperations';\n\nimport logo from '../../images/logo.png';\nimport background from '../../images/background.png';\n\nimport {\n  Item,\n  ImgLogo,\n  ImgBackground,\n  Container,\n  ContainerAvatar,\n  ImgAvatar,\n  ContainerInfo,\n  Button,\n} from './CardItem.styled';\n\nconst CardItem = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const handleFollowClick = async user => {\n    const { followers, isFollowing } = user;\n    const action = isFollowing ? -1 : 1;\n    const updatedUser = {\n      ...user,\n      followers: followers + action,\n      isFollowing: !isFollowing,\n    };\n    await dispatch(updateUser(updatedUser));\n  };\n\n  return (\n    <Item key={user.id}>\n      <ImgLogo src={logo} alt=\"logo\" width={76} height={22} />\n      <ImgBackground\n        src={background}\n        alt=\"background\"\n        width={308}\n        height={168}\n      />\n      <Container>\n        <ContainerAvatar>\n          <ImgAvatar\n            src={`${user.avatar}`}\n            alt={user.user}\n            width={62}\n            height={62}\n          />\n        </ContainerAvatar>\n      </Container>\n      <ContainerInfo>\n        <p>{user.tweets} TWEETS</p>\n        <p>{user.followers.toLocaleString('en-US')} FOLLOWERS</p>\n      </ContainerInfo>\n      <Button\n        type=\"button\"\n        value={user.isFollowing}\n        onClick={() => handleFollowClick(user)}\n      >\n        {user.isFollowing ? 'FOLLOWING' : 'FOLLOW'}\n      </Button>\n    </Item>\n  );\n};\n\nexport default CardItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 48px;\n\n  margin-top: 48px;\n  margin-bottom: 48px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 196px;\n\n  margin: 0 auto;\n  padding: 14px 39px;\n\n  font-weight: 600;\n  font-size: 18px;\n\n  border-radius: 10px;\n  border: none;\n\n  background-color: #ebd8ff;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.1);\n  }\n  color: #000000;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-top: 30px;\n`;\n\nexport const ContainerDrop = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  background-color: #ebd8ff;\n  color: #000000;\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 18px;\n  color: #000000;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchUsers } from 'redux/users/usersOperations';\nimport { getAllUsers } from 'redux/users/usersSelectors';\n\nimport CardItem from 'components/CardItem/CardItem';\n\nimport {\n  List,\n  Button,\n  Container,\n  ContainerDrop,\n  Label,\n  Select,\n} from './CardList.styled';\n\nimport { MdArrowBackIos } from 'react-icons/md';\n\nconst CardList = () => {\n  const users = useSelector(getAllUsers);\n  const [step, setStep] = useState(3);\n  const [filter, setFilter] = useState('show all');\n\n  const limit = 3;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const handleStepClick = () => {\n    setStep(prevState => prevState + limit);\n  };\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const filterUsers = user => {\n    if (filter === 'show all') {\n      return true;\n    } else if (filter === 'follow') {\n      return !user.isFollowing;\n    } else if (filter === 'followings') {\n      return user.isFollowing;\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <Container>\n        <Link to=\"/\">\n          <Button>\n            <MdArrowBackIos />\n            BACK\n          </Button>\n        </Link>\n        <ContainerDrop>\n          <Label htmlFor=\"filter\">FILTER: </Label>\n          <Select id=\"filter\" value={filter} onChange={handleFilterChange}>\n            <option value=\"show all\">show All</option>\n            <option value=\"follow\">follow</option>\n            <option value=\"followings\">followings</option>\n          </Select>\n        </ContainerDrop>\n      </Container>\n      <List>\n        {users\n          .filter(filterUsers)\n          .slice(0, step)\n          .map(user => {\n            return <CardItem key={user.id} user={user} />;\n          })}\n      </List>\n      {step < users.filter(filterUsers).length && (\n        <Button onClick={handleStepClick}>LOAD MORE</Button>\n      )}\n    </>\n  );\n};\n\nexport default CardList;\n","import CardList from 'components/CardList/CardList';\n\nconst Tweets = () => {\n  return (\n    <>\n      <CardList />\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["getAllUsers","users","items","Item","styled","ImgLogo","ImgBackground","Container","ContainerAvatar","ImgAvatar","ContainerInfo","Button","props","value","user","dispatch","useDispatch","handleFollowClick","followers","isFollowing","action","updatedUser","updateUser","src","alt","width","height","background","avatar","tweets","toLocaleString","type","onClick","id","List","ContainerDrop","Select","Label","useSelector","useState","step","setStep","filter","setFilter","useEffect","fetchUsers","filterUsers","to","htmlFor","onChange","event","target","slice","map","length","prevState"],"sourceRoot":""}